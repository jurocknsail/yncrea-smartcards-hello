<!--
Copyright (c) 1998, 2015, Oracle and/or its affiliates. All rights reserved.
-->
<project name="ClassicTaskDefs" basedir=".">
    <description>
        All taskdefs used by classic samples
    </description>

    <dirname property="this.dir" file="${ant.file.ClassicTaskDefs}" />
    <property environment="env"/>
    <property name="jc.home" value="${env.JC_CLASSIC_HOME}" />
    <property name="redirect.output" value="default.output"/>
    <property name="build.sysclasspath" value="ignore" />

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${jc.home}/lib/ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>

    <macrodef name="getAID">
        <attribute name="sample.name" />
        <attribute name="aid.sep" default=":" />
        <sequential>
            <propertyregex property="@{sample.name}.aid"
                           override="true"
                           input="${@{sample.name}}"
                           regexp="#aid.sep#"
                           replace="@{aid.sep}"
                           casesensitive="false" />
        </sequential>
    </macrodef>
    <macrodef name="getAID.forscript">
        <attribute name="sample.name" />
        <sequential>
            <getAID sample.name="@{sample.name}" aid.sep=" "/>
        </sequential>
    </macrodef>

    <!-- Definitions for tasks for javacard tools -->
    <taskdef name="apdutool"
             classname="com.sun.javacard.ant.tasks.APDUToolTask"
             classpath="${jc.home}/lib/jctasks.jar" />
    <taskdef name="capgen"
             classname="com.sun.javacard.ant.tasks.CapgenTask"
             classpath="${jc.home}/lib/jctasks.jar" />
    <taskdef name="maskgen"
             classname="com.sun.javacard.ant.tasks.MaskgenTask"
             classpath="${jc.home}/lib/jctasks.jar" />
    <taskdef name="deploycap"
             classname="com.sun.javacard.ant.tasks.DeployCapTask"
             classpath="${jc.home}/lib/jctasks.jar" />
    <taskdef name="exp2text"
             classname="com.sun.javacard.ant.tasks.Exp2TextTask"
             classpath="${jc.home}/lib/jctasks.jar" />
    <taskdef name="convert"
             classname="com.sun.javacard.ant.tasks.ConverterTask"
             classpath="${jc.home}/lib/jctasks.jar" />
    <taskdef name="verifyexport"
             classname="com.sun.javacard.ant.tasks.VerifyExpTask"
             classpath="${jc.home}/lib/jctasks.jar" />
    <taskdef name="verifycap"
             classname="com.sun.javacard.ant.tasks.VerifyCapTask"
             classpath="${jc.home}/lib/jctasks.jar" />
    <taskdef name="verifyrevision"
             classname="com.sun.javacard.ant.tasks.VerifyRevTask"
             classpath="${jc.home}/lib/jctasks.jar" />
    <taskdef name="scriptgen"
             classname="com.sun.javacard.ant.tasks.ScriptgenTask"
             classpath="${jc.home}/lib/jctasks.jar" />
    <typedef name="appletnameaid"
             classname="com.sun.javacard.ant.types.AppletNameAID"
             classpath="${jc.home}/lib/jctasks.jar" />
    <typedef name="jcainputfile"
             classname="com.sun.javacard.ant.types.JCAInputFile"
             classpath="${jc.home}/lib/jctasks.jar" />
    <typedef name="exportfiles"
             classname="org.apache.tools.ant.types.FileSet" />

    <path id="jc_jars"
          description="Sets the classpath to Java Card API">
        <pathelement path="${jc.home}/lib/api_classic.jar" />
        <!--pathelement path="${jc.home}/lib/api_classic_annotations.jar" /-->
    </path>

    <path id="jc_tools_jars"
          description="Sets the classpath to Java Card API and tools">
        <pathelement path="${jc.home}/lib/api_classic.jar" />
        <pathelement path="${jc.home}/lib/tools.jar" />
        <!--pathelement path="${jc.home}/lib/api_classic_annotations.jar" /-->
    </path>

</project>